package practicaTree;
import java.sql.*;
import java.util.ArrayList;

import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import practicaTree.PantallaUno.Modelo;

public class PantallaDos extends JFrame{
	private static final long serialVersionUID = 1L;
	private static Modelo modelo;
	private DefaultMutableTreeNode root;
	protected Connection conexion;
	protected Statement statement;
	protected DatabaseMetaData dataBaseMetaData;
	//private ArrayList<String> arrayTablas=new ArrayList<>();
	//private ArrayList<String> arrayColumnas=new ArrayList<>();
	//private ArrayList<String> arrayTipos=new ArrayList<>();
	
	
	public static void main(String[] args) throws SQLException {
		PantallaDos pantallaDos=new PantallaDos();
		pantallaDos.conexion("test","root","mysql");
		for(String tabla: pantallaDos.getTablas("test")){
			System.out.println("======"+tabla+"*****");
			
			ArrayList<String>tiposTabla= pantallaDos.getTipos(tabla) ;
			for(String tipo: tiposTabla) {
				System.out.println(">>>>>"+tipo);
			}
			
		}
		
	}
	
	public static void main2(String[] args) {
		try {
			new PantallaDos(modelo);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	public PantallaDos() {}
	public PantallaDos(Modelo modelo) throws SQLException {
		super("Pantalla Dos");
		PantallaDos.modelo=modelo;
		root=new DefaultMutableTreeNode("Root");
		crearInterfaz();
		conexion();
	}
	public void crearInterfaz() {
		System.out.println("Creando Interfaz PantallaDos...");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setSize(450,450);
		setVisible(true);
	}
	public void conexion() throws SQLException {
		System.out.println("Creando Conexion...");
		String url="jdbc:mysql://localhost:3306/"+modelo.cuadroDefaultSchema;
		try {
			Class.forName("com.mysql.jdbc.Driver");
			conexion=DriverManager.getConnection(url,modelo.cuadroUserName,modelo.cuadroPassword);
			statement=conexion.createStatement();
			dataBaseMetaData=conexion.getMetaData();
		}catch (ClassNotFoundException e) {
			System.out.println(e.getMessage());
		}catch (SQLException e) {
			System.out.println(e.getMessage());
		}
		System.out.println("Se Ha Conectado...");
	}
	public void conexion(String esquema, String usuario, String password) throws SQLException {
		System.out.println("Creando Conexion...");
		String url="jdbc:mysql://localhost:3306/"+esquema;
		try {
			Class.forName("com.mysql.jdbc.Driver");
			conexion=DriverManager.getConnection(url,usuario,password);
			statement=conexion.createStatement();
			dataBaseMetaData=conexion.getMetaData();
		}catch (ClassNotFoundException e) {
			System.out.println(e.getMessage());
		}catch (SQLException e) {
			System.out.println(e.getMessage());
		}
		System.out.println("Se Ha Conectado...");
	}
	public ArrayList<String> getTablas(String nombreEsquema) throws SQLException {
		ArrayList<String> arrayTablas=new ArrayList<>();
		System.out.println("getTablas() "+nombreEsquema);
		String catalogo=null;
		String patronTabla="%";
		String[] tipos=null;
		ResultSet tablas=dataBaseMetaData.getTables(nombreEsquema, catalogo,  patronTabla, tipos);
		String nombreTabla=null;
		while(tablas.next()) {
			nombreTabla=tablas.getString(3);
			System.out.println(nombreTabla);
			arrayTablas.add(nombreTabla);
		}
		System.out.println("Fin getTablas()");
		return arrayTablas;
	}
	/*public ArrayList<String> getColumnas(ArrayList<String> arrayTablas) {
		System.out.println("getColumnas()");
		String nombreEsquema=modelo.cuadroDefaultSchema;
		try {
			dataBaseMetaData=conexion.getMetaData();
			String catalogo=null;
			String formatoCol=null;
			for(int i=0;i<arrayTablas.size();i++) {
				ResultSet rsColumnas=dataBaseMetaData.getColumns(nombreEsquema, catalogo, arrayTablas.get(i), formatoCol);
				String columna;
				while(rsColumnas.next()){
					columna=rsColumnas.getString(4);
					System.out.println("Columna: "+columna);
					//arrayColumnas.add(columna);
				}
			}
		}catch (SQLException e1) {
			System.out.println(e1.getMessage());
		}
		return arrayColumnas;
	}*/
	
	public ArrayList<String> getTipos(String tablas) {
		System.out.println("getTipos()");
		
		ArrayList tipos=new ArrayList();
		String nombreEsquema=modelo.cuadroDefaultSchema;
		try {
			dataBaseMetaData=conexion.getMetaData();
			String catalogo=null;
			String formatoCol=null;
		
				ResultSet rsTipos=dataBaseMetaData.getColumns(nombreEsquema, catalogo, tablas, formatoCol);
				String tipo;
				while(rsTipos.next()){
					tipo=rsTipos.getString(6);
					System.out.println("Tipo: "+tipo);
					tipos.add(tipo);
				}
			
		}catch (SQLException e1) {
			System.out.println(e1.getMessage());
		}
		return tipos;
	}
	
	
	public DefaultMutableTreeNode getNodosTablas(DefaultMutableTreeNode root, ArrayList<String> arrayTablas) {
		for(int i=0;i<arrayTablas.size();i++) {
			DefaultMutableTreeNode nodoTablas=new DefaultMutableTreeNode();
		}
		return root;
	}
	/*public void getTablas(DatabaseMetaData dataBaseMetaData, String nombreEsquema) throws SQLException {
		System.out.println("getTablas() "+nombreEsquema);
		String catalogo=null;
		String patronTabla="%";
		String[] tipos=null;
		ResultSet tablas=dataBaseMetaData.getTables(nombreEsquema, catalogo,  patronTabla, tipos);
		String nombreTabla=null;
		
		while(tablas.next()) {
			nombreTabla=tablas.getString(3);
			System.out.println(nombreTabla);
			arrayTablas.add(nombreTabla);
		}
		System.out.println("El arrayTablas contiene:");
		for(int i=0;i<arrayTablas.size();i++) {
			System.out.println(arrayTablas.get(i));
			getEstructura(llenarEstructura(getNodo(arrayTablas.get(i))));
		}
		System.out.println("Fin getTablas()");
	}
	public DefaultMutableTreeNode getNodo(String nombreTabla) {
		DefaultMutableTreeNode nodo=new DefaultMutableTreeNode(nombreTabla);
		return nodo;
	}
	public DefaultMutableTreeNode llenarEstructura(DefaultMutableTreeNode nodo) {
		root.add(nodo);
		return root;
	}
	public JTree getEstructura(DefaultMutableTreeNode root) {
		JTree arbol=new JTree(root);
		arbol.setRootVisible(false);
		arbol.setShowsRootHandles(true);
		JScrollPane panel=new JScrollPane(arbol);
		add(getContentPane().add(panel));
		return arbol;
	}
	public void getCampos(String nombreEsquema, String nombreTabla) {
		System.out.println("getCampos() "+nombreEsquema+" "+nombreTabla);
		try {
			dataBaseMetaData=conexion.getMetaData();
			String catalogo=null;
			String formatoCol=null;
			ResultSet rsColumnas=dataBaseMetaData.getColumns(nombreEsquema, catalogo, nombreTabla, formatoCol);
			String columna, tipo;
			while(rsColumnas.next()){
				columna=rsColumnas.getString(4);
				tipo=rsColumnas.getString(6);
				System.out.println("Columna: "+columna+" Tipo: "+tipo);
				arrayColumnas.add(columna);
				arrayTipos.add(tipo);
			}
			System.out.println("El Array de Columnas contiene:");
			for(int i=0;i<arrayColumnas.size();i++) {
				System.out.println(arrayColumnas.get(i));
				getNodo(arrayTablas.get(i)).add(getNodo(arrayColumnas.get(i)));
			}
			System.out.println("El Array de Tipos contiene:");
			for(int i=0;i<arrayTipos.size();i++) {
				System.out.println(arrayTipos.get(i));
				getNodo(arrayTablas.get(i)).add(getNodo(arrayTipos.get(i)));
			}
			System.out.println("Fin getCampos()");
		}catch (SQLException e1) {
			System.out.println(e1.getMessage());
		}
	}*/
}
package examendi;
import java.awt.Color;
import java.awt.FlowLayout;
import java.io.File;

import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;

public class ExamenInterfacesGraficas extends JFrame{
	private JPanel panelIzquierdo, panelDerechoSuperior, panelDerechoInferior;
	private JLabel etiquetaDrives, etiquetaCarpetas; 
	private JComboBox<String> listaDrives, listaCarpetas;
	private static DefaultMutableTreeNode root;
	public static void main(String[] args) {
		new ExamenInterfacesGraficas();
	}
	public ExamenInterfacesGraficas() {
		super("Examen DAM Interfaces Graficas");
		crearInterfaz();
	}
	private void crearInterfaz() {
		System.out.println("Creando Interfaz...");
		etiquetaDrives=new JLabel("Drive");
		etiquetaCarpetas=new JLabel("Carpetas en la raiz");
		
		panelIzquierdo=new JPanel();
		panelIzquierdo.setBorder(BorderFactory.createLineBorder(Color.BLACK));
		panelDerechoSuperior=new JPanel();
		panelDerechoSuperior.setBorder(BorderFactory.createLineBorder(Color.GREEN));
		panelDerechoInferior=new JPanel();
		panelDerechoInferior.setBorder(BorderFactory.createLineBorder(Color.RED));
		BoxLayout boxLayoutIzquierdo=new BoxLayout(panelIzquierdo, BoxLayout.Y_AXIS);
		BoxLayout boxLayoutDerechoSuperior=new BoxLayout(panelDerechoSuperior, BoxLayout.Y_AXIS);
		BoxLayout boxLayoutDerechoInferior=new BoxLayout(panelDerechoInferior, BoxLayout.Y_AXIS);
		panelIzquierdo.setLayout(boxLayoutIzquierdo);
		panelDerechoSuperior.setLayout(boxLayoutDerechoSuperior);
		panelDerechoInferior.setLayout(boxLayoutDerechoInferior);
		add(panelIzquierdo);
		add(panelDerechoSuperior);
		add(panelDerechoInferior);
		
		listaDrives=new JComboBox<String>(new ModeloListaDrives());
		panelIzquierdo.add(etiquetaDrives);
		panelIzquierdo.add(listaDrives);
		
		listaCarpetas=new JComboBox<String>();
		panelIzquierdo.add(etiquetaCarpetas);
		panelIzquierdo.add(listaCarpetas);
		
		setLayout(new FlowLayout());
		setSize(1000,500);
		setVisible(true);
		System.out.println("Interfaz creada");
	}
	public String getDrives() {
		File[] listaDrives=File.listRoots();
		String drive=null;
		for(int i=0; i<listaDrives.length; i++) {
			System.out.println(listaDrives[i]);
			drive=listaDrives[i].toString();
		}
		return drive;
	}
	public File[] getCarpetas() {
		String drive=getDrives();
		File raiz=new File(drive);
		File[] listaCarpetas=raiz.listFiles();
		String carpetas=null;
		for(int i=0; i<listaCarpetas.length; i++) {
			System.out.println(listaCarpetas[i]);
			carpetas=listaCarpetas[i].toString();
			this.listaCarpetas.add(carpetas);
		}
		return listaCarpetas;
	}
private class ModeloListaCarpetas extends AbstractListModel<File[]> implements ComboBoxModel<File[]>{
		
		String[] listaValores= {};
		String valorSeleccionado=listaValores[0];
		@Override
		public int getSize() {return listaValores.length;}
		@Override
		public String getElementAt(int index) {return listaValores[index];}
		@Override
		public void setSelectedItem(Object anItem) {System.out.println("Se ha seleccionado "+anItem);valorSeleccionado=(String)anItem;}
		@Override
		public Object getSelectedItem() {System.out.println("Se ha obtenido "+valorSeleccionado);return valorSeleccionado;}
	}
	private class ModeloListaDrives extends AbstractListModel<String> implements ComboBoxModel<String>{
		
		String[] listaValores= {getDrives()};
		String valorSeleccionado=listaValores[0];
		@Override
		public int getSize() {return listaValores.length;}
		@Override
		public String getElementAt(int index) {return listaValores[index];}
		@Override
		public void setSelectedItem(Object anItem) {System.out.println("Se ha seleccionado "+anItem);valorSeleccionado=(String)anItem;}
		@Override
		public Object getSelectedItem() {System.out.println("Se ha obtenido "+valorSeleccionado);return valorSeleccionado;}
	}
}
